@attribute [Authorize]
@attribute [Route($"/{nameof(TaskList)}")]

@using Syncfusion.Blazor.Data
@using ToDo.Shared.DTOs.Task
@using ShiftSoftware.ShiftEntity.Model.Extensions

<ShiftList EntitySet="Task"
           Title="Tasks"
           T="TaskListDTO"
           Dense
           ComponentType="typeof(TaskForm)"
           TypeAuthAction="ToDo.Shared.ToDoActions.Task"
           ShowIDColumn="true"
           AddDialogParameters="AddDialogParameters"
           EnableExport>

    <PropertyColumn Property="x => x.Name" Title="Name" />
    <PropertyColumn Property="@(x => x.DueDate == null ? null : x.DueDate.Value.ToString("yyyy-MM-dd hh:mm tt"))" Title="Due Date" />

    <TemplateColumn Title="Status">
        <CellTemplate>
            <span>@context.Item!.Status!.Describe()</span>
        </CellTemplate>
    </TemplateColumn>
</ShiftList>

@code {
    [Parameter]
    public string? ParentTaskId { get; set; }

    public Dictionary<string, string> AddDialogParameters = new();
    public Query? Qry;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrWhiteSpace(ParentTaskId))
        {
            AddDialogParameters = new() { { nameof(TaskForm.ParentTaskId), ParentTaskId } };

            Qry = new Query()
                .Where(nameof(TaskListDTO.ParentTaskId), "equal", ParentTaskId);
        }
    }
}