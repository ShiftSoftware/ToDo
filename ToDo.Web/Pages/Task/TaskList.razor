@attribute [Authorize]
@attribute [Route($"/{nameof(TaskList)}")]

@using Syncfusion.Blazor.Data;
@using System.Linq.Expressions;
@using ToDo.Shared.DTOs.Task

<ShiftList EntitySet="Task"
           Title="Tasks"
           T="TaskListDTO"
           ComponentType="typeof(TaskForm)"
           TypeAuthAction="ToDo.Shared.ToDoActions.Task"
           ShowIDColumn="true"
           Dense="true"
           EnableExport
           Where="Where"
           AddDialogParameters="AddDialogParameters">

     <PropertyColumn Property="x => x.Name" />
     <PropertyColumn Property="x => x.Status" />
     <PropertyColumn Property="x => x.ParentTaskId" />
</ShiftList>

 @code {
    [Parameter]
    public string? ParentTaskId { get; set; }

    public Dictionary<string, string> AddDialogParameters = new();

    public Expression<Func<TaskListDTO, bool>>? Where = null;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrWhiteSpace(ParentTaskId))
        {
            AddDialogParameters = new() { { nameof(TaskForm.ParentTaskId), ParentTaskId } };
            Where = x => x.ParentTaskId == ParentTaskId;
        }
    }
}